:Namespace oracles
    ⍝ This namespace contains a collection of quantum oracles that can be used with the Deutsch–Jozsa algorithm.
    ⍝ All oracles are functions of the same structure. 
    ⍝ They take a vector state as ⍵ and returns the result of the oracle applied in the inital vector state.
    ⍝ The initial vector state first qubit is the ancilla qubit used in the DJ algorithm.

    ⍝ Define the functions that we are going to use
    CNOT ← #.quapl.gates.CNOT
    stage ← #.quapl.circuit.stage
    
    zero←{
        ⍝ This oracle always return 0 no matter the input, meaning its a constant function that does not change the input vector state.
        ⍵
    }

    XOR←{
        ⍝ This oracle performs a series of CNOT gates from every qubit to the ancilla qubit.

        ⍝ We need a named variable for the initial state to not have overlap with the ⍵ in the function
        i_state ← ⍵
        n_qubits←(2⍟1⌷⍴⍵)-1

        ⍝ Make the stage a function to iterate it through all indices
        ⊃({(⍵ 0)(⊂CNOT) stage i_state}/ (⍳n_qubits))
    }

:EndNamespace
